// solution 1:
// inorder traversal
// inorder of BST: increasing order
// runtime: O(n)
// space: O(n) recursion stack space

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    Integer prev = null;
    Integer res;
    
    public int minDiffInBST(TreeNode root) {
        res = Integer.MAX_VALUE;
        inorder(root);
        return res;
    }
    
    private void inorder(TreeNode root) {
        if (root == null) {
            return;
        }
        
        inorder(root.left);
        
        if (prev != null) {
            res = Math.min(root.val - prev, res);
        }
        prev = root.val;
        
        inorder(root.right);
    }
}
